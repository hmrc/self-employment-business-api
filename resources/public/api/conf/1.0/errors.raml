#%RAML 1.0 Library

uses:
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

traits:
  notFound:
    responses:
      404:
        body:
          application/json:
            type: types.errorResponse
            example:
              description: The matching resource is not found.
              value:
                code: MATCHING_RESOURCE_NOT_FOUND
  clientOrAgentNotAuthorised:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              clientOrAgentNotAuthorised:
                description: 'The client or agent is not authorised. This is because: the client is not subscribed to MTD, the agent is not subscribed to Agent Services, or the client has not authorised the agent to act on their behalf'
                value:
                  code: CLIENT_OR_AGENT_NOT_AUTHORISED
  formatNino:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              formatNino:
                description: The format of the supplied NINO field is not valid.
                value:
                  code: FORMAT_NINO
  formatTaxYear:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              formatTaxYear:
                description: The format of the supplied tax year field is not valid.
                value:
                  code: FORMAT_TAX_YEAR
  incorrectOrEmptyBody:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              incorrectOrEmptyBody:
                description: An empty or non-matching body was submitted.
                value:
                  code: RULE_INCORRECT_OR_EMPTY_BODY_SUBMITTED
  ruleTaxYearNotSupported:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              rule_TaxYearNotSupported:
                description: The specified tax year is not supported. That is, the tax year specified is before the minimum tax year value.
                value:
                  code: RULE_TAX_YEAR_NOT_SUPPORTED
  ruleTaxYearRangeInvalid:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleTaxYearRangeInvalid:
                description: Tax year range invalid. A tax year range of one year is required.
                value:
                  code: RULE_TAX_YEAR_RANGE_INVALID
  formatBusinessId:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              formatBusinessId:
                description: The format of the supplied Business ID field is not valid.
                value:
                  code: FORMAT_BUSINESS_ID
  formatFromDate:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              formatFromDate:
                description: The format of the supplied From date field is not valid.
                value:
                  code: FORMAT_FROM_DATE
  formatToDate:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              formatToDate:
                description: The format of the supplied To date field is not valid.
                value:
                  code: FORMAT_TO_DATE
  formatValue:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              formatValue:
                description: The format of one or more monetary fields is not valid.
                value:
                  code: FORMAT_VALUE
  ruleBothExpensesSupplied:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleBothExpensesSupplied:
                description: Both expenses and consolidatedExpenses can not be present at the same time.
                value:
                  code: RULE_BOTH_EXPENSES_SUPPLIED
  ruleToDateBeforeFromDate:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleToDateBeforeFromDate:
                description: The To date is earlier than the From date.
                value:
                  code: RULE_TO_DATE_BEFORE_FROM_DATE
  ruleOverlappingPeriod:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleOverlappingPeriod:
                description: Period summary overlaps with any of the existing period summaries.
                value:
                  code: RULE_OVERLAPPING_PERIOD
  ruleMisalignedPeriod:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleMisalignedPeriod:
                description: Period summary is not within the accounting period.
                value:
                  code: RULE_MISALIGNED_PERIOD
  ruleNotContiguousPeriod:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleNotContiguousPeriod:
                description: Period summaries are not contiguous.
                value:
                  code: RULE_NOT_CONTIGUOUS_PERIOD
  ruleNotAllowedConsolidatedExpenses:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              ruleNotAllowedConsolidatedExpenses:
                description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold.
                value:
                  code: RULE_NOT_ALLOWED_CONSOLIDATED_EXPENSES
  ruleExemptionCode:
      responses:
        400:
          body:
            application/json:
              type: types.errorResponse
              examples:
                ruleExemptionCode:
                  description: Exemption code must be supplied if is exempt indicator is set to true. Exemption code must not be supplied if exempt indicator is set to false.
                  value:
                    code: RULE_EXEMPTION_CODE
